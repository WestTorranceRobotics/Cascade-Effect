#pragma config(Hubs,  S1, HTMotor,  HTMotor,  HTServo,  none)
#pragma config(Sensor, S3,     IR,             sensorHiTechnicIRSeeker1200)
#pragma config(Sensor, S4,     light,          sensorLightActive)
#pragma config(Motor,  mtr_S1_C1_1,     leftNush,      tmotorTetrix, openLoop, encoder)
#pragma config(Motor,  mtr_S1_C1_2,     rightNush,     tmotorTetrix, openLoop, encoder)
#pragma config(Motor,  mtr_S1_C2_1,     nushTake,      tmotorTetrix, openLoop)
#pragma config(Motor,  mtr_S1_C2_2,     lanushearLift, tmotorTetrix, openLoop, encoder)
#pragma config(Servo,  srvo_S1_C3_1,    servo1,               tServoNone)
#pragma config(Servo,  srvo_S1_C3_2,    servo2,               tServoNone)
#pragma config(Servo,  srvo_S1_C3_3,    box1,                 tServoStandard)
#pragma config(Servo,  srvo_S1_C3_4,    box2,                 tServoStandard)
#pragma config(Servo,  srvo_S1_C3_5,    gripper1,             tServoStandard)
#pragma config(Servo,  srvo_S1_C3_6,    gripper2,             tServoStandard)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

#include "JoystickDriver.c"

int groundIR;
int IRPosition;

void anushalizerobot()
{
		motor[leftNush] = 0;
		motor[rightNush] = 0;
		motor[lanushearLift] = 0;
		motor[nushTake] = 0;
		nMotorEncoder[leftNush] = 0;
		nMotorEncoder[rightNush] = 0;
		nMotorEncoder[lanushearLift] = 0;
		servo[gripper1] = 0;
		servo[gripper2] = 255;
		servo[box1] = 0;
		servo[box2] = 0;
	}

void resetEncoders()
{
	motor[leftNush] = 0;
	motor[rightNush] = 0;
	motor[lanushearLift] = 0;
	motor[nushTake] = 0;
	nMotorEncoder[leftNush] = 0;
	nMotorEncoder[rightNush] = 0;
	nMotorEncoder[lanushearLift] = 0;
}

int Drive(int Distance, int Lspeed, int Rspeed)
{
	while(nMotorEncoder[leftNush] < Distance)
	{
		motor[leftNush] = Lspeed;
		motor[rightNush] = Rspeed;
	}

	return Distance;
}

void FindPosition()
{
	groundIR = SensorValue[IR];

	if(groundIR == 5)
	{
		IRPosition = 0;
	}
	else if(groundIR == 6 || groundIR == 7 || groundIR == 8)
	{
		IRPosition = 1;
	}
	else
	{
		IRPosition = 2;
	}
}

void CenterP1()
{
	Drive(2000, 25, 25);
	resetEncoders();
	wait1Msec(250);

	Drive(-1000, -25, 25);
	resetEncoders();
	wait1Msec(250);

	Drive(1000, 25, 25);
	resetEncoders();
	wait1Msec(250);

	Drive(1000, 25, -25);
	resetEncoders();
	wait1Msec(250);

	Drive(5000, 100, 100);//ramming speed
	resetEncoders();
	wait1Msec(250);

	Drive(1000, 25, -25);
	resetEncoders();
	wait1Msec(250);

	Drive(1000, 25, 25);
	resetEncoders();
	wait1Msec(250);

	Drive(1000, 25, -25);
	resetEncoders();
	wait1Msec(250);
}


void CenterP2()
{
	Drive(4000, 25, 25);
	resetEncoders();
	wait1Msec(250);

	Drive(-500, -25, 25);
	resetEncoders();
	wait1Msec(250);

	Drive(2828, 100, 100);//ramming speed
	resetEncoders();
	wait1Msec(250);

	Drive(1000, 25, -25);
	resetEncoders();
	wait1Msec(250);

	Drive(1414, 25, 25);
	resetEncoders();
	wait1Msec(250);

	Drive(1000, 25, -25);
	resetEncoders();
	wait1Msec(250);
}


void CenterP3()
{
	Drive(2000, 25, 25);
	resetEncoders();
	wait1Msec(250);

	Drive(-1000, -25, 25);
	resetEncoders();
	wait1Msec(250);

	Drive(3000, 25, 25);
	resetEncoders();
	wait1Msec(250);

	Drive(1000, 25, -25);
	resetEncoders();
	wait1Msec(250);

	/*
	Drive(5000, 100, 100);//ramming speed
	resetEncoders();
	wait1Msec(250);

	Drive(1000, 25, -25);
	resetEncoders();
	wait1Msec(250);

	Drive(1000, 25, 25);
	resetEncoders();
	wait1Msec(250);

	Drive(1000, 25, -25);
	resetEncoders();
	wait1Msec(250);
*/
}


task main()
{
	waitForStart();
	anushalizerobot();

	Drive(6000, 50, 50);
	resetEncoders();
	wait1Msec(250);

	Drive(-1000, -50, 50);
	resetEncoders();

	FindPosition();

	if(IRPosition == 0)
	{
		CenterP1();
	}
	else if(IRPosition == 1)
	{
		CenterP2();
	}
	else if(IRPosition == 2)
	{
		CenterP3();
	}























}
